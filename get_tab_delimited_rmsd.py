#!/usr/local/bin/python
# This script generates a tab delimited table for all RMSD files in the current
# directory generated by get_rmsd.sh
# Usage: get_tab_delimited_rmsd.py
import os

__author__ = "Kailong Mao"

def is_float(value):
	try:
		float(value)
	except ValueError:
		return False
	return True

def consume_n_rows(in_file, n):
	"""This function consumes n rows in an input file
	"""
	for i in range(n):
		in_file.readline()

def insert_n_empty_cells(out_file, n):
	"""This function inserts n empty cells in a tab-delimited file in the output
	file. 
	"""
	for i in range(n):
		out_file.write("_\t")

def insert(out_file, data):
	"""This function inserts a data cell in the output file.
	"""
	out_file.write(data + "\t")

def insert_molecule_data(out_file, in_file_name):
	"""This function reads in an individual RMSD file generated by get_rmsd.sh
	and inserts it as a row in the output file
	"""
	in_file = open(in_file_name, "r")
	
	# Insert molecule name
	insert(out_file, in_file_name.split(".")[0])
	row_data = [0] * 18

	line = in_file.readline()
	while line != "":
		if ".key" in line:
			if "dma_0" in line:
				indices = range(0, 16, 3)
			elif "dma_1" in line:
				indices = range(1, 17, 3)
			elif "isa" in line:
				indices = range(2, 18, 3)

		data = line.split()
		if len(data) > 0 and is_float(data[-1]):
			row_data[indices.pop(0)] = data[-1]
		line = in_file.readline()

	for cell in row_data:
		insert(out_file, cell)
	out_file.write("\n")

	in_file.close()

out_file = open("rmsd.table", "w")

# First, set up the first header row for the grids
first_row = ["Far_Grid", "Near_Grid", "Near_Grid_with_CP"]
second_row = ["Original", "Fitted"]
third_row = ["Modified_DMA", "DMA", "ISA"]

insert_n_empty_cells(out_file, 1)
for i in first_row:
	insert_n_empty_cells(out_file, 2)
	insert(out_file, i)
	insert_n_empty_cells(out_file, 3)
out_file.write("\n")

# The second header row
insert_n_empty_cells(out_file, 1)
for i in first_row:
	for j in second_row:
		insert_n_empty_cells(out_file, 1)
		insert(out_file, j)
		insert_n_empty_cells(out_file, 1)
out_file.write("\n")

# The third header row
insert_n_empty_cells(out_file, 1)
for i in first_row:
	for j in second_row:
		for k in third_row:
			insert(out_file, k)
out_file.write("\n")

for in_file_name in os.listdir(os.getcwd()):
	if in_file_name.endswith(".rmsd"):
		insert_molecule_data(out_file, in_file_name)

out_file.close()
